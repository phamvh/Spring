<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd"
    xmlns:context="http://www.springframework.org/schema/context">
    
	
	
<!-- 	<bean id="pointA" class="org.koushik.javabrains.Point">
		<property name="x" value="0"/>
		<property name="y" value="0"/>
	</bean>
	 -->
<!-- 	<bean id="pointB" class="org.koushik.javabrains.Point">
		<property name="x" value="0"/>
		<property name="y" value="0"/>
	</bean> -->
	
	<bean id="pointC" class="org.koushik.javabrains.Point">
		<property name="x" value="0"/>
		<property name="y" value="0"/>
	</bean>

	<bean id="circle" class="org.koushik.javabrains.Circle" name = "circle-name"> 
	<!-- name = "triangle-name" can be used the same way as id in java application-->
		
		
	</bean>
	
	<!--  This is a shortcut to tell spring to scan for all types of annotations, and apply the rules that each
	annotation requires. -->
    <context:annotation-config/>
	
	<!-- See the comment in the Circle class, for method public void setCenter(Point center)
	This tells spring to scan for methods that have annotation "@Required".
	Spring will ensure that those methods have to be called when beans are created.
	Mostly, the Required methods are those that set values to important properties of a bean, which can not
	be empty -->
	
	<!-- <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"></bean> -->
	
	<!-- Similarly, this is to tell spring to scan for methods that have annotation Autowired.
	 -->
	<!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean> -->
	
	
	
	
</beans>