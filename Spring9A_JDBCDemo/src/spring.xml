<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd">
      <context:annotation-config/>
      
      <!-- This is to tell spring to scan the base-package for beans that have annotation @Component
      Those beans are not defined here, but we simply annotation @Component for quickness
      Check out class JdbcDaoImpl to see the annotation -->
      <context:component-scan base-package="org.koushik.javabrains"/>     
       
      <!-- This works, but it does not support pooling --> 
      <!--  bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      	<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
      	<property name = "url" value="jdbc:derby://localhost:1527/db;create=true"/>
      </bean -->
      
      <!-- This has more advantages over DriverManagerDataSource. It supports pooling and more.-->
      <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
      	<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
      	<property name = "url" value="jdbc:derby://localhost:1527/db;create=true"/>
      	<property name="initialSize" value="2"></property>
      	<property name="maxActive" value="5"></property>
      </bean>
      
      <bean id = "simpleJdbcDaoImpl" class="org.koushik.javabrains.dao.SimpleJdbcDaoImpl">
         <property name="dataSource" ref="dataSource"/>
      </bean>
</beans>





























     